                                "Marco!"

                                "Polo!"

                                 * * *

The marco.py script tries to figure out who's out there.  It does this
by trying to do a ssl handshake with a lot of Tor servers in parallel.
If it succeeds, it records their certificates.  If it fails, it records
why.

WHAT YOU MIGHT NEED:

  - I tested it with Python 2.6, and I think it should work with Python 2.5.
    If your Python is older than that, it won't work.

HOW TO USE IT:

  - Edit the top of marco.py to make sure you like the defaults.  You
    can adjust the timeout, where it writes stuff, and how many servers
    it tests in parallel.

  - Run marco.py with one or more networkstatus files as command-line
    arguments.  If an addr:port appears more than once, marco will only
    test it once.

HOW TO READ THE OUTPUT:

  - Marco will generate a file called marco.out full of lines like:
    ADDR:PORT STATUS MESSAGE.

    STATUS will be one of:
      "ok" -- everything is fine
      "noconnect" -- we couldn't open a TCP socket.
      "nohandshake" -- we couldn't do a TLS handshake.
      "err" -- we got an unexpected internal error

    MESSAGE will say more about what went wrong.

    The lines will be in the order that Marco received answers.  If you want
    them to be sorted by something else, you'll need to do that yourself.

  - If you have Python 2.6, Marco will also generate a file called
    marco_certs.out, containing every TLS cert that it got for an "ok"
    server.  We can use this later to make sure identity keys were correct.

    If you only have Python 2.5, Marco will only get the DN for the cert.
